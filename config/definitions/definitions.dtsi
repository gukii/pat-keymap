// shortcut definitions

#include "key_positions.dtsi"

/ {
  compatible = "zmk,bindings";
  #define LONG_TIMEOUT_MS 100
  #define NORMAL_LAYERS 0 1
  #define NORMAL_LAYERS_MAC 3 4
  #define NORMAL_LAYERS_WIN 5 6
  #define LOCK_LAYER 7

  behaviors {
    skq: sticky_key_quick_release {
      compatible = "zmk,behavior-sticky-key";
      label = "STICKY_KEY_QUICK_RELEASE";
      #binding-cells = <1>;
      bindings = <&kp>;
      release-after-ms = <1000>;
      quick-release;
    };

    skl: sticky_key_long_pressed {
      compatible = "zmk,behavior-sticky-key";
      label = "STICKY_KEY_QUICK_RELEASE";
      #binding-cells = <1>;
      bindings = <&kp>;
      release-after-ms = <10000>;
    };
  };
};

#define HOLD_TAP(NAME, HOLD_BEHAVIOR, TAP_BEHAVIOR) \
/ {\
  behaviors {\
    ht_##NAME: hold_tap_behaviors {\
      compatible = "zmk,behavior-hold-tap";\
      label = "hold-tap-behaviors";\
      #binding-cells = <2>;\
      flavor = "balanced";\
      tapping-term-ms = <200>;\
      quick-tap-ms = <200>;\
      bindings = <HOLD_BEHAVIOR>, <TAP_BEHAVIOR>;\
    };\
  };\
};

#define HOLD_TAP_mo_kp(NAME, HOLD_BEHAVIOR, TAP_BEHAVIOR) \
  HOLD_TAP(mo_kp, &mo, &kp)

#define HOLD_TAP_mo_sl(NAME, HOLD_BEHAVIOR, TAP_BEHAVIOR) \
  HOLD_TAP(mo_sl, &mo, &sl)


// change Layer: tap: sticky layer, hold: momentary layer, 2x tap: to layer
#define TAP_DANCE_LAYERS_sl_mo_tog(LAYER, TAP_LAYER) \
   TAP_DANCE(ls_##LAYER##_##TAP_LAYER, <&mo_sl LAYER TAP_LAYER>, <&tog LAYER>)
// change Layer: tap: sticky layer, hold: momentary layer, 2x tap: to layer
#define TAP_DANCE_LAYER_sl_mo_tog(LAYER) \
   TAP_DANCE(ls_##LAYER, <&ht_mo_sl LAYER LAYER>, <&tog LAYER>)
// change Layer: tap: given Keypress, hold: momentary layer, 2x tap: to layer
#define TAP_DANCE_LAYER_kp_mo_tog(NAME, LAYER, TAP_KEY) \
   TAP_DANCE(lk_##NAME, <&ht_mo_kp LAYER TAP_KEY>, <&tog LAYER>)

#define COMBO(NAME, BINDINGS, KEYPOS) \
  / {\
    combos {\
      compatible = "zmk,combos";\
      combo_##NAME { \
        bindings = <BINDINGS>; \
        key-positions = <KEYPOS>; \
        layers = <NORMAL_LAYERS>; \
      };\
    };\
  };

#define COMBO_LONG(NAME, BINDINGS, KEYPOS) \
  / {\
    combos {\
      compatible = "zmk,combos";\
      combo_##NAME { \
        bindings = <BINDINGS>; \
        key-positions = <KEYPOS>; \
        layers = <NORMAL_LAYERS>; \
        timeout-ms = <LONG_TIMEOUT_MS>; \
      };\
    };\
  };

#define COMBO_LONG_MAC(NAME, BINDINGS, KEYPOS) \
  / {\
    combos {\
      compatible = "zmk,combos";\
      combo_##NAME { \
        bindings = <BINDINGS>; \
        key-positions = <KEYPOS>; \
        layers = <NORMAL_LAYERS NORMAL_LAYERS_MAC>; \
        timeout-ms = <LONG_TIMEOUT_MS>; \
      };\
    };\
  };

#define COMBO_LONG_WIN(NAME, BINDINGS, KEYPOS) \
  / {\
    combos {\
      compatible = "zmk,combos";\
      combo_##NAME { \
        bindings = <BINDINGS>; \
        key-positions = <KEYPOS>; \
        layers = <NORMAL_LAYERS NORMAL_LAYERS_WIN>; \
        timeout-ms = <LONG_TIMEOUT_MS>; \
      };\
    };\
  };

#define COMBO_LAYER(NAME, BINDINGS, KEYPOS, LAYERS) \
  / {\
    combos {\
      compatible = "zmk,combos";\
      combo_##NAME { \
        bindings = <BINDINGS>; \
        key-positions = <KEYPOS>; \
        layers = <LAYERS>; \
      };\
   };\
  };

#define str(s) #s
#define MACRO(NAME, BINDINGS) \
  / { \
    macros { \
      macro_##NAME: macro_##NAME { \
        compatible = "zmk,behavior-macro"; \
        label = str(macro_##NAME); \
        #binding-cells = <0>; \
        wait-ms = <0>; \
        tap-ms = <10>; \
        bindings = <BINDINGS>; \
      };\
    };\
  };

#define CHORD(NAME, BINDINGS, KEYPOS) \
  MACRO(m_##NAME, BINDINGS) \
  COMBO(NAME, &macro_m_##NAME, KEYPOS) \

#define CHORD_LAYER(NAME, BINDINGS, KEYPOS, LAYER) \
  MACRO(m_##NAME, BINDINGS) \
  COMBO_LAYER(NAME, &macro_m_##NAME, KEYPOS, LAYER) \

#define MOD_MORPH(NAME, BINDING_PURE, BINDING_MODED, MODS) \
/ { \
    behaviors { \
         mm_##NAME: mod_morph_##NAME {\
            compatible = "zmk,behavior-mod-morph";\
            label = str(mod_morph_##NAME);\
            #binding-cells = <0>;\
            bindings = <BINDING_PURE>, <BINDING_MODED>;\
            mods = <(MODS)>;\
         };\
    };\
  };

// a high taping-terms value is ok, as REP should be used for repeated key presses
#define TAP_DANCE(NAME, ...) \
/ {\
  behaviors {\
    td_##NAME: tap_dance_##NAME {\
      compatible = "zmk,behavior-tap-dance";\
      label = str(tap_dance_##NAME);\
      #binding-cells = <0>;\
      tapping-term-ms = <400>;\
      bindings = __VA_ARGS__;\
     };\
  };\
};

#define TAP_DANCE_SHIFT(KEY) \
  TAP_DANCE(s_##KEY, <&kp KEY>, <&kp LS(KEY)>)
