/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

&caps_word {
   continue-list = <UNDERSCORE MINUS BACKSPACE>;
};
&key_repeat {
    usage-pages = <HID_USAGE_KEY HID_USAGE_CONSUMER>;
};
/*           34 Keys
 ╭──────────────╮ ╭──────────────╮
 │ 0  1  2  3  4│ │ 5  6  7  8  9│
 │10 11 12 13 14│ │15 16 17 18 19│
 │20 21 22 23 24│ │25 26 27 28 29│
 ╰────────╮30 31│ │32 33╭────────╯
          ╰─────╯ ╰─────╯         */
/ {
   symbols {
/*  Enter with base layer ⇧+Layer
    ╭──────────────────╮ ╭───────────────╮
    │ W  F  M  P  V    │ │ │  :  J  "  Z │
    │ R  S  N  T  B    │ │ ;  E  A  I  H │
    │ X  C  L  D  G    │ │ _  U  O  Y  K │
    ╰────────╮ ⇧ CapsW │ │⌫ -L1- ╭──────╯
             ╰─────────╯ ╰────────╯         */
/*  Enter with base layer ⇧+Layer
    ╭──────────────────╮ ╭───────────────╮
    │ ]  }  )  >  ^    │ │ \  !  _  `  _ │
    │ [  {  (  <  INS  │ │ ?  _  &  @  # │
    │ _  _  ~  $  ⌦   │ │ -  =  _  _  _ │
    ╰────────╮ ⇧  REP  │ │ ␣ -L0- ╭──────╯
             ╰─────────╯ ╰────────╯         */
/*  pressing ⇧
    ╭──────────────────╮ ╭───────────────╮
    │ _  _  _  _  _    │ │ _  _  _  _  _ │
    │ ]  }  )  >  _    │ │ _  _  _  _  _ │
    │ _  _  _  _  _    │ │ _  _  _  _  _ │
    ╰────────╮ ⇧  REP  │ │⌫ -L0- ╭──────╯
             ╰─────────╯ ╰────────╯         */
      behaviors {
         LRBKT: square_brackets {
            compatible = "zmk,behavior-mod-morph";
            label = "SQ_BRACK";
            #binding-cells = <0>;
            bindings = <&kp LBKT>, <&kp RBKT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
         };
         LRBRC: cornered_braces {
            compatible = "zmk,behavior-mod-morph";
            label = "CORN_BRACE";
            #binding-cells = <0>;
            bindings = <&kp LBRC>, <&kp RBRC>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
         };
         LRPAR: paranthesis {
            compatible = "zmk,behavior-mod-morph";
            label = "PARANTHESIS";
            #binding-cells = <0>;
            bindings = <&kp LPAR>, <&kp RPAR>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
         };
         LG_T: grater_then_and_less_then {
            compatible = "zmk,behavior-mod-morph";
            label = "G_L_THEN";
            #binding-cells = <0>;
            bindings = <&kp GT>, <&kp LT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
         };
      };
      keymap {
         compatible = "zmk,keymap";
         bindings = <
//╭────────┬────────┬─────────┬────────┬───────╮╭─────────┬─────────┬────────┬─────────┬────────╮
   &kp RBKT &kp RBRC &kp RPAR  &kp GT   &none    &kp BSLH  &kp EXCL  &none    &kp GRAVE &none
//├────────┼────────┼─────────┼────────┼───────┤├─────────┼─────────┼────────┼─────────┼────────┤
   &LRBKT   &LRBRC   &LRPAR    &LG_T    &kp INS  &kp QMARK &none     &kp AMPS &kp AT    &kp HASH
//├────────┼────────┼─────────┼────────┼───────┤├─────────┼─────────┼────────┼─────────┼────────┤
   &none     &none   &kp TILDE &kp DLLR &kp DEL  &trans    &kp EQUAL &none    &none     &none
//╰────────┴────────┴─╮                        ││                   ╭────────┴─────────┴────────╯
                       &kp LSHFT &key_repeat     &trans    &to 0
//                    ╰─────────┴──────────────╯╰─────────┴─────────╯
         >;
      };
   };
};