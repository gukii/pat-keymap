#include <dt-bindings/zmk/bt.h>

/ {
    keymap {
        compatible = "zmk,keymap";
                function_layer {
// -----------------------------------------------------------------
// |     | F 4 | F 5 | F 6 | F10 | | <!> | <!> | <!> | <!> |     |
// |CAPSL| F 1 | F 2 | F 3 | F11 | | BT2 |VMUTE|VOLDN|VOLUP| <!> |
// |-!!!-| F 7 | F 8 | F 9 | F12 | | BT0 | BT1 |BRIDN|BRIUP|_FUN_|
//                   |     | SPC | | RET |     |
/*  
    ╭─────────────────────────╮ ╭─────────────────────────────────────╮
    │ F5   F4   F3   F2   F1  │ │ BT_1    BT_2    BT_3     BT_4  BT_5 │
    │ F10  F9   F8   F7   F6  │ │  _      F16     F17      F18   F19  │
    │ F15  F14  F13  F12  F11 │ │ BT_CLR  OUT_BT  OUT_USB   _TO DAN_  │
    ╰───────────╮trans  trans │ │ trans  trans╭───────────────────────╯
                ╰─────────────╯ ╰─────────────╯   */
                        bindings = <
//┌────────┬────────┬────────┬────────┬────────┐ ┌────────────┬─────────────┬─────────────┬─────────────┬─────────────┐
    &kp F5   &kp F4   &kp F3   &kp F2   &kp F1    &bt_sel_0  &bt_sel_1  &bt_sel_2  &bt_sel_3  &bt_sel_4
//├────────┼────────┼────────┼────────┼────────┤ ├────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &kp F10  &kp F9   &kp F8   &kp F7   &kp F6    &none         &kp F16       &kp F17       &kp F18       &kp F19            
//├────────┼────────┼────────┼────────┼────────┤ ├────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &kp F15  &kp F14  &kp F13  &kp F12  &kp F11   &bt BT_CLR    &out OUT_BLE  &out OUT_USB  &none         &none
//└────────┴────────┴────────┴────────┴────────┘ └────────────┴─────────────┴─────────────┴─────────────┴─────────────┘
                               &none    &none     &trans        &trans 
//                           └────────┴────────┘ └────────────┴─────────────┘                        
                        >;
                };
        };
};
COMBO_LAYER(to_DANGER, &mo DAN, RBR RBP, FUN)

#define BT_SEL_LED(BT_CHANNEL, COLOR) \
  / { \
    macros { \
      bt_sel_##BT_CHANNEL: bt_sel_##BT_CHANNEL { \
        compatible = "zmk,behavior-macro"; \
        label = str(bt_sel_##BT_CHANNEL); \
        #binding-cells = <0>; \
        wait-ms = <0>; \
        tap-ms = <10>; \
        bindings \
          = <&rgb_ug RGB_COLOR_HSB(COLOR,100,100)>\
          , <&bt BT_SEL BT_CHANNEL>;\
      };\
    };\
  };

BT_SEL_LED(0, 248)
BT_SEL_LED(1, 276)
BT_SEL_LED(2, 48)
BT_SEL_LED(3, 38)
BT_SEL_LED(4, 128)

/*
//// Layer Switching
// with changing underglow
#define MACRO_mo_LAYER_SWITCH_LED(LAYER, COLOR) \
  / { \
    macros { \
      ls_mo_##LAYER: macro_ls_mo_##LAYER { \
        compatible = "zmk,behavior-macro"; \
        label = str(macro_ls_mo_##LAYER); \
        #binding-cells = <0>; \
        wait-ms = <0>; \
        tap-ms = <10>; \
        bindings \
          = <&macro_press &mo LAYER>\
          , <&macro_tap &rgb_ug RGB_COLOR_HSB(COLOR,100,100)>\
          , <&macro_pause_for_release>\
          , <&macro_release &mo LAYER>\
          , <&macro_tap &rgb_ug RGB_COLOR_HSB(248,100,50)>;\
      };\
    };\
  };

// 
#define MACRO_LAYER_SWITCH_LED(LAYER, COLOR) \
    MACRO(ls_to_##LAYER, &to LAYER &rgb_ug RGB_COLOR_HSB(COLOR,100,100)) \
    MACRO_mo_LAYER_SWITCH_LED(LAYER, COLOR)
//    MACRO(ls_mo_##LAYER, &mo LAYER &rgb_ug RGB_COLOR_HSB(COLOR,100,100)) \
// toggle off would lead to wrong layer color
//   MACRO(ls_tog_##LAYER, &tog LAYER &rgb_ug RGB_COLOR_HSB(COLOR,100,100)) \

MACRO_LAYER_SWITCH_LED(ALP, 248)// Alphabeth characters
MACRO_LAYER_SWITCH_LED(CRD, 276) // Layer for Word Chords
MACRO_LAYER_SWITCH_LED(SYM, 48) // Symboles
MACRO_LAYER_SWITCH_LED(NUM, 38) // Numbers
MACRO_LAYER_SWITCH_LED(CMD, 128) // layer for chording
MACRO_LAYER_SWITCH_LED(FUN, 306) // Function Keys
MACRO_LAYER_SWITCH_LED(DAN, 8) // DANGER!
MACRO_LAYER_SWITCH_LED(LCK, 22) // Lock KB

*/
